loadlib_Content = [
(0x6186d0, "gdiplus.dll"),
(0x61870c, "ole32.dll"),
(0x6187a4, "bcrypt.dll"),
(0x618678, "wininet.dll"),
(0x618700, "shlwapi.dll"),
(0x6187fc, "shell32.dll"),
(0x6186e0, "psapi.dll"),
(0x618650, "CreateCompatibleBitmap"),
(0x618638, "SelectObject"),
(0x618620, "BitBlt"),
(0x6187a8, "DeleteObject"),
(0x6186dc, "CreateCompatibleDC"),
(0x61867c, "GdipGetImageEncodersSize"),
(0x6186c0, "GdipGetImageEncoders"),
(0x618770, "GdipCreateBitmapFromHBIT"),
(0x6187a0, "GdiplusStartup"),
(0x618788, "GdiplusShutdown"),
(0x618740, "GdipSaveImageToStream"),
(0x618694, "GdipDisposeImage"),
(0x6187ec, "GdipFree"),
(0x618628, "GetHGlobalFromStream"),
(0x61871c, "CreateStreamOnHGlobal"),
(0x61879c, "CoUninitialize"),
(0x6187b4, "CoInitialize"),
(0x61866c, "CoCreateInstance"),
(0x618654, "BCryptGenerateSymmetricK"),
(0x6186f4, "BCryptCloseAlgorithmProv"),
(0x6187d0, "BCryptDecrypt"),
(0x618680, "BCryptSetProperty"),
(0x618790, "BCryptDestroyKey"),
(0x6186a0, "BCryptOpenAlgorithmProvi"),
(0x618820, "GetWindowRect"),
(0x61861c, "GetDesktopWindow"),
(0x618804, "GetDC"),
(0x6187f8, "CloseWindow"),
(0x618618, "wsprintfA"),
(0x618778, "EnumDisplayDevicesA"),
(0x61876c, "GetKeyboardLayoutList"),
(0x618734, "CharToOemW"),
(0x6186f0, "wsprintfW"),
(0x6186bc, "RegQueryValueExA"),
(0x6187dc, "RegEnumKeyExA"),
(0x6186d4, "RegOpenKeyExA"),
(0x618750, "RegCloseKey"),
(0x618818, "RegEnumValueA"),
(0x618600, "CryptBinaryToStringA"),
(0x6186b8, "CryptUnprotectData"),
(0x61877c, "SHGetFolderPathA"),
(0x6187f0, "ShellExecuteExA"),
(0x6186ec, "InternetOpenUrlA"),
(0x6187e4, "InternetConnectA"),
(0x6186e4, "InternetCloseHandle"),
(0x6186e8, "InternetOpenA"),
(0x6187ac, "HttpSendRequestA"),
(0x618814, "HttpOpenRequestA"),
(0x618710, "InternetReadFile"),
(0x618690, "InternetCrackUrlA"),
(0x6187c0, "StrCmpCA"),
(0x61863c, "StrStrA"),
(0x618764, "StrCmpCW"),
(0x6186ac, "PathMatchSpecA"),
(0x6187bc, "GetModuleFileNameExA"),
(0x618670, "RmStartSession"),
(0x61872c, "RmRegisterResources"),
(0x618614, "RmGetList"),
(0x61881c, "RmEndSession"),

]

if __name__ == "__main__":
	for address, name in loadlib_Content:
		mysym = Symbol(SymbolType.FunctionSymbol, address, name)
		bv.define_user_symbol(mysym)